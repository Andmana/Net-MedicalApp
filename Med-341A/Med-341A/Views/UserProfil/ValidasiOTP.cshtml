@using Med_341A.viewmodels
@model VMResponse

<div class="card">
    <div class="card-body">
        <div class="h4 mb-4">Masukkan Kode OTP yang telah dikirimkan ke email anda</div>
        <form asp-action="UbahEmail" method="post" id="form_validateOTP">
            <!-- Input OTP -->
            <div class="mb-4 row">
                <label for="OTP" class="col-sm-4 col-form-label">OTP</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="OTP" name="OTP" onkeypress="return isNumber(event)" placeholder="Masukkan kode OTP...">
                    <label id="OTP-error" class="@(Model.Success ? "text-success":"text-danger")"
                           for="OTP">@Model.Message</label>
                </div>
                <div class="form-group d-flex justify-content-center align-items-center text-center mt-3">
                    <button type="button" id="btn_sendOTP" class="btn btn-info border-0" disabled>
                        Kirim ulang kode OTP
                        <div id="countdown" class="d-inline"></div>
                    </button>
                </div>
            </div>
            <div class="d-flex justify-content-between mt-4">
                <button type="button" class="btn btn-light" id="btn_cancel" data-bs-dismiss="modal">Batal</button>
                <button type="submit" class="btn btn-primary" id="btn_confirm">Konfirmasi OTP</button>
            </div>
        </form>
    </div>
</div>
<script>
    var countdownInterval;
    startCountdown(45);

    $("#OTP-error").on('focus', function () {
        $("#OTP-error").text("").removeClass();
    })

    function startCountdown(duration) {
        var timer = duration, minutes, seconds;
        countdownInterval = setInterval(function () {
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            $('#countdown').text(` (${minutes}:${seconds})`);

            timer--
            if (timer < 0) {
                clearInterval(countdownInterval);

                $('#countdown').text("");
                $("#btn_sendOTP").prop('disabled', false);
            }
        }, 1000);
    }
    function isNumber(event) {
        var charCode = event.which ? event.which : event.keyCode;
        // Hanya mengizinkan angka (0-9)
        if (charCode < 48 || charCode > 57) {
            return false;
        }
        return true;
    }

    $("#btn_sendOTP").click(function () {
        $("#OTP-error").text("").removeClass();
        buttonOnLoading("#btn_sendOTP", "Resend OTP...");
        $("#btn_sendOTP").prop('disabled', true)
        $("#btn_confirm").prop('disabled', true)

        $.ajax({
            url: "/UserProfil/UlangRequestOTP",
            type: "Post",
            data: { email: "@ViewBag.Email" , id: "@ViewBag.Id"},
            dataType: "json",
            success: function (respon) {
                var data = respon.dataResponse

                if (data.success) {
                    $("#OTP-error").text(data.message)
                        .removeClass().addClass('text-success')
                } else {
                    $("#OTP-error").text(data.message)
                        .removeClass().addClass('is-invalid text-danger')
                }
                $("#btn_confirm").prop('disabled', false)
            },
            beforeSend: function () {
                $("#OTP-error").text("");
                $("#btn_sendOTP").prop('disabled', true)
                $("#btn_confirm").prop('disabled', true)
            },
            complete: function () {
                $("#btn_sendOTP").html('Kirim ulang kode OTP <div id="countdown" class="d-inline"></div>');
                $("#btn_sendOTP").prop('disabled', true);
                startCountdown(30); // Start the countdown again after OTP is resent
            }
        })
    })

    $("#form_validateOTP").validate({
        errorPlacement: function (error, element) {
            // Append all errors to the same #OTP-error span
            $("#OTP-error").text(error.text()).addClass('text-danger');
        },
        success: function (label, element) {
            // Clear the error message if the input becomes valid
            $("#OTP-error").text("").removeClass('text-danger')
        },
        rules: {
            OTP: {
                required: true,
                minlength: 6,
                maxlength: 6,
            }
        },
        messages: {
            OTP: {
                required: "Masukan kode OTP",
                minlength: "Minimal 6 Digit",
                maxlength: "Maximal 6 Digit",
            }
        },
        submitHandler: function () {
            buttonOnLoading("#btn_confirm", "Confirm OTP...");
            var otp = $("#OTP").val()

            $.ajax({
                url: '/UserProfil/VerifikasiOTP',
                type: 'Post',
                data: { email: "@ViewBag.Email", id: "@ViewBag.Id", otp },
                datatype: 'json',
                success: function (respon) {

                    var data = respon.dataResponse

                    if (data.success) {
                        $("#my_modal").modal("hide")
                        swal(
                            "Success",
                            data.message, {
                            icon: "success",
                            buttons: {
                                confirm: {
                                    className: "btn btn-success",
                                },
                            },
                        }
                        ).then((clickconfirm) => {
                            if (clickconfirm) {
                                window.location.href = "/Home";
                            }
                        })
                    }
                    else {
                        $("#OTP-error").show();
                        $("#OTP-error").text(data.message)
                            .removeClass().addClass('is-invalid text-danger')
                    }

                    buttonOnFinish("#btn_confirm", "Konfirmasi OTP")
                    $("#btn_sendOTP").prop('disabled', false)
                    $("#btn_confirm").prop('disabled', false)
                },
                beforeSend: function () {
                    $("#btn_sendOTP").prop('disabled', true)
                    $("#btn_confirm").prop('disabled', true)
                }
            })
        }
    })

    $('#my_modal').on('hidden.bs.modal', function () {
        // Clear the countdown interval when the modal is closed
        clearInterval(countdownInterval);
    });


    $("#btn_cancel").click(function () {
        $("#my_modal").modal("hide");
    })
</script>