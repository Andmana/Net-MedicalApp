<div class="card">
    <div class="card-body">

        <h2 class="mt-3 text-center">Set Password</h2>
        <p class="text-center">Masukan password baru untuk akun anda</p>

        <form class="mt-4" id="form_setPassword">
            <div class="col-lg-12">

                <div class="form-group">
                    <label class="text-dark" for="Password">Password</label>

                    <div class="input-group mb-3">
                        <input class="form-control" id="Password" type="password" placeholder="Masukan password baru"
                           name="Password" onfocus="resetSpan()">
                        <span class="input-group-text toggle-password" data-target="#Password">
                            <i class="icon-eye"></i>
                        </span>
                    </div>
                    <ul id="password-rules" class="text-danger list-unstyled" style="display:none;">
                        <li id="minlength-rule" style="display: none;">Panjang Password minimal 8 karakter</li>
                        <li id="uppercase-rule" style="display: none;">Password harus mengandung minimal 1 huruf kapital</li>
                        <li id="lowercase-rule" style="display: none;">Password harus mengandung minimal 1 huruf kecil</li>
                        <li id="number-rule" style="display: none;">Password harus mengandung minimal 1 angka</li>
                        <li id="specialchar-rule" style="display: none;">Password harus mengandung minimal 1 karakter khusus</li>
                    </ul>

                    <span class="text-danger" id="validate_password"></span>
                    <span class="text-danger" id="verify_password"></span>
                    <span class="text-danger" id="Password-error"></span>
                </div>
            </div>

            <div class="col-lg-12">
                <div class="form-group">
                    <label class="text-dark" for="ConfirmPassword">Masukan Ulang Password</label>

                    <div class="input-group mb-3">
                        <input class="form-control" id="ConfirmPassword" type="password"
                           placeholder="Masukan ulang password" name="ConfirmPassword">
                        <span class="input-group-text toggle-password" data-target="#ConfirmPassword">
                            <i class="icon-eye"></i>
                        </span>
                    </div>

                    <span class="text-danger" id="validate_confirm_password"></span>
                </div>
            </div>

            <div class="col-lg-12 text-center mt-2">
                <button type="submit" class="btn btn-block btn-dark">Set Kata Sandi</button>
            </div>
        </form>
    </div>
</div>

<script>
    function buttonOnLoading(idButton, text) 
    {
        $(idButton).html(`<span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                          <span role="status"> ${text} </span>`
                        )
                   .prop('disabled', true);
    }

    function buttonOnFinish(idButton, text) 
    {
        $(idButton).html(text).prop('disabled', false);
    }

    $.validator.addMethod("no_space_at_ends", function (value, element) {
        return $.trim(value).length === value.length && value !== ""; // Pastikan tidak ada spasi di depan atau di belakang dan tidak kosong
    });

    // $.validator.addMethod("strong_password", function (value, element) {
    //     let password = value;
    //     if (!(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@@#$%&])(.{8,20}$)/.test(password))) {
    //         return false;
    //     }
    //     return true;
    // }, function (value, element) {
    //     let password = $(element).val();
    //     if (!(/^(.{8,20}$)/.test(password))) {
    //         return 'Password must be between 8 to 20 characters long.';
    //     }
    //     else if (!(/^(?=.*[A-Z])/.test(password))) {
    //         return 'Password must contain at least one uppercase.';
    //     }
    //     else if (!(/^(?=.*[a-z])/.test(password))) {
    //         return 'Password must contain at least one lowercase.';
    //     }
    //     else if (!(/^(?=.*[0-9])/.test(password))) {
    //         return 'Password must contain at least one digit.';
    //     }
    //     else if (!(/^(?=.*[@@#$%&])/.test(password))) {
    //         return "Password must contain special characters from @@#$%&.";
    //     }
    //     return false;
    // });

    $.validator.addMethod("strong_password", function (value, element) {
        let password = $.trim(value);
        // Validasi password lengkap
        let valid = true;

        // Hide all rules initially
        $("#minlength-rule").hide();
        $("#uppercase-rule").hide();
        $("#lowercase-rule").hide();
        $("#number-rule").hide();
        $("#specialchar-rule").hide();

        // Validasi panjang password
        if (password.length < 8) {
            $("#minlength-rule").show();
            valid = false;
        }

        // Validasi huruf kecil
        if (!/[a-z]/.test(password)) {
            $("#lowercase-rule").show();
            valid = false;
        }

        // Validasi huruf kapital
        if (!/[A-Z]/.test(password)) {
            $("#uppercase-rule").show();
            valid = false;
        }

        // Validasi angka
        if (!/[0-9]/.test(password)) {
            $("#number-rule").show();
            valid = false;
        }

        // Validasi karakter spesial
        if (!/[^\w\s]/.test(password)) {
            $("#specialchar-rule").show();
            valid = false;
        }

        return valid;
    });

    $("#Password").on('input', function () {

        // Kosongkan pesan error dan pesan validasi sebelumnya
        $("#Password-error").text('');
        $("#validate_password").text('');

        // Pastikan tidak ada spasi di depan atau di belakang
        if ($.trim($(this).val()) !== $(this).val()) {
            $("#Password-error").text("Password tidak boleh memiliki spasi di depan atau di belakang.");
            // Menghentikan validasi lebih lanjut jika ada error
            return; // Keluar dari fungsi jika ada error
        }

        // Tampilkan aturan password
        $("#password-rules").show();

        // Validasi ini akan memanggil aturan
        $("#form_setPassword").validate().element(this);
    });

    $("#form_setPassword").validate({
        errorClass: "is-invalid text-danger",
        rules: {
            Password: {
                required: true,
                strong_password : true,
                no_space_at_ends: true
            },
            ConfirmPassword: {
                equalTo: "#Password",
                required: true
            }
        },
        messages: {
            Password: {
                required: "Password is required.",
                strong_password: "",
                no_space_at_ends: ""
            },
            ConfirmPassword: {
                equalTo: "Passwords do not match.",
                required: "Password ulang harus diisi"
            }
        },
        errorPlacement: function (error, element) {
            // Tempatkan pesan validasi di bawah elemen input yang sesuai
            error.appendTo(element.parent().next('span'));
        },
        submitHandler: function (form) {
            buttonOnLoading("#btn_submit", "Menyimpan data...");
            var dataForm = $(form).serialize()

            $.ajax({
                url: "ResetPassword/SavePassword",
                type: "post",
                data: dataForm,
                dataType: "json",
                success: function (response) {
                    var data = response.dataResponse
                    if (data.success) {
                        $("#my_modal").modal("hide")
                        swal({
                            title: "Success!",
                            text: data.message,
                            buttons: {
                                confirm: {
                                    className: "btn btn-black",
                                },
                            },
                        }).then((value) => {
                            // This callback runs when the user clicks the confirm button
                            openLoginModal()
                        });

                    } else {
                        $("#verify_password").text(data.message)
                        buttonOnFinish("#btn_submit", "Set Kata Sandi")
                        return true
                    }

                }, function(xhr, status, error) {
                    console.error("Error status:", status);
                    console.error("Error message:", error);
                    console.log("Response:", xhr.responseText);
                }


            })
        },
    })




    function resetSpan()
    {
        $('#verify_password').text(``)
    }

    $(".toggle-password").on('click', function () {
        const targetInput = $(this).data('target');
        const inputField = $(targetInput);
        const icon = $(this).find('i');

        if (inputField.attr('type') === 'password') 
        {
            inputField.prop('type', 'text');
            icon.removeClass("icon-eye").addClass("fas fa-eye-slash");
        } 
        else 
        {
            inputField.prop('type', 'password');
            icon.removeClass("fas fa-eye-slash").addClass("icon-eye");
        }
    });
    
</script>